plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.palantir.docker-compose' version '0.33.0'
}

group = 'com.st'
version = '0.0.1-SNAPSHOT'

ext {
    set('queryDslVersion', "5.0.0")
}

java {
    sourceCompatibility = '17'
    targetCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

    // Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.5'

    // Kafka
    implementation 'org.springframework.kafka:spring-kafka'

    // coolSMS
    implementation 'net.nurigo:sdk:4.3.0'

    // QueryDSL - Qdsl Jakarta.persistence-api -https://github.com/querydsl/querydsl/issues/3233
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
    //java.lang.NoClassDefFoundError 대응
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api:3.1.0"

    // SpringDoc OpenAPI UI
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

    // ETC
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'io.lettuce:lettuce-core'
    annotationProcessor 'org.projectlombok:lombok'

    // Database
    testImplementation 'com.h2database:h2:2.1.214'
    runtimeOnly 'com.mysql:mysql-connector-j'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-redis', version: '2.4.10'

    //LOG
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.8.0'
    implementation 'net.logstash.logback:logstash-logback-encoder:6.6'


    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:2.3.1'
    testImplementation 'org.mockito:mockito-inline:4.5.1'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation 'org.testcontainers:kafka'
    testImplementation 'org.testcontainers:mongodb'
    testImplementation 'org.testcontainers:junit-jupiter'

}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.register('copyYaml', Copy) {
    copy {
        from './Eighteen_Be_Setting'
        include "*.yaml"
        into 'src/main/resources'
    }
}

tasks.register('copyEnv', Copy) {
    copy {
        from './Eighteen_Be_Docker'
        include ".env.*"
        into './'
    }
}