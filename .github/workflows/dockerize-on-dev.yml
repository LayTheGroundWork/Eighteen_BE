name: Dockerize on Dev Branch

on:
  push:
    branches:
      - dev # workflows work when push to dev
jobs:
  test-build-and-push:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: 'recursive'
          token: ${{ secrets.SUBMODULE_TOKEN }}

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Copy private resources
        run: |
          ./gradlew copyYaml --no-daemon
          ./gradlew copyEnv --no-daemon

      - name: Build Docker image
        run: docker build . --tag eighteenbe/eighteen:0.0.1

      - name: Push Docker image
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push eighteenbe/eighteen:0.0.1

  deploy:
    runs-on: ubuntu-20.04
    needs: test-build-and-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: 'recursive'
          token: ${{ secrets.SUBMODULE_TOKEN }}

      - name: docker login
        run: | 
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Deploy to Dev Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEV_HOST }}
          username: ${{ secrets.DEV_USERNAME }}
          key: ${{ secrets.DEV_PRIVATE_KEY }}
          script: |
            cd ${{ secrets.DEV_PRJ_DIRECTORY }}
            git config --global user.email "qkrtkdwns3410@gmail.com"
            git config --global user.name "qkrtkdwns3410"
            git config --global url.https://${{ secrets.PAT }}@github.com/.insteadOf https://github.com/
            # 메인 프로젝트 강제 최신화
            git fetch --all
            git reset --hard origin/dev
      
            # 서브모듈 강제 최신화
            git submodule foreach 'git fetch && git reset --hard origin/$(git symbolic-ref --short HEAD)'
            
            # 서브모듈을 다시 초기화하고 재귀적으로 업데이트
            git submodule update --init --recursive --force
            
            # 도커 컨테이너 재배포
            sudo docker stop eighteen-be
            sudo docker rm eighteen-be
            sudo docker rmi eighteenbe/eighteen:0.0.1
            sudo docker-compose --env-file .env.dev up -d
